name: Build

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
    tags:
      - v*

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.21.0
        env:
          CIBW_SKIP: pp*
          CIBW_ARCHS_LINUX: auto64
          CIBW_ARCHS_MACOS: auto64 arm64
          CIBW_ARCHS_WINDOWS: auto64
          CIBW_BEFORE_TEST: pip install "numpy<2.0"
          CIBW_TEST_REQUIRES: pytest black>=24.10.0
          CIBW_TEST_COMMAND:  >
            pytest {project}/tests &&
            black --check {project}

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: '3.8'

      - name: Build sdist
        run: >
          python -m pip install -U setuptools wheel pybind11 &&
          python setup.py sdist

      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

  create_release:
    name: Create GitHub Release
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/*
          generate_release_notes: true
          draft: false
          prerelease: false
